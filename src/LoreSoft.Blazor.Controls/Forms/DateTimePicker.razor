@inherits InputBase<TValue>
@typeparam TValue
@namespace LoreSoft.Blazor.Controls

@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Web

<div class="@PickerClass">
    <div class="datetime-picker-value-container">
        <input @attributes="AdditionalAttributes"
               type="@InputType"
               class="@InputClass"
               disabled="@Disabled"
               @ref="DateTimeInput"
               @bind="CurrentValueAsString"
               @bind:after="RefreshDatePicker"
               @onfocus="DateTimeFocus"
               @onkeydown="HandleKeydown"
               @onkeydown:preventDefault="PreventKey" />
        @if (CanClear())
        {
            <button type="button"
                    class="datetime-picker-clear-button"
                    title="Clear Value"
                    disabled="@Disabled"
                    @onclick="ClearValue">
                <svg height="20"
                     width="20"
                     viewBox="0 0 20 20"
                     aria-hidden="true"
                     focusable="false"
                     role="img">
                    <path fill="currentColor"
                          d="M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z" />
                </svg>
            </button>
        }
        <button type="button"
                class="datetime-picker-calendar-button"
                title="Show Picker"
                disabled="@Disabled"
                @onclick="ToggleDatePicker">
            <svg height="20"
                 width="20"
                 viewBox="0 0 448 512"
                 aria-hidden="true"
                 focusable="false"
                 role="img">
                <path fill="currentColor"
                      d="M400 64h-48V8c0-4.4-3.6-8-8-8h-16c-4.4 0-8 3.6-8 8v56H128V8c0-4.4-3.6-8-8-8h-16c-4.4 0-8 3.6-8 8v56H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zm16 400c0 8.8-7.2 16-16 16H48c-8.8 0-16-7.2-16-16V192h384v272zm0-304H32v-48c0-8.8 7.2-16 16-16h352c8.8 0 16 7.2 16 16v48zM112 384h96c8.8 0 16-7.2 16-16v-96c0-8.8-7.2-16-16-16h-96c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16zm16-96h64v64h-64v-64z"></path>
            </svg>
        </button>
    </div>

    @if (IsDatePickerOpen)
    {
        <div class="datetime-picker-background"
             @onclick="CloseDatePicker"></div>

        <div class="date-picker-modal">
            @if (Mode == DateTimePickerMode.Date || Mode == DateTimePickerMode.DateTime)
            {
                <div class="date-picker-container">
                    <div class="date-picker-navigation">
                        <button type="button"
                                class="date-picker-previous-button"
                                title="Previous Month"
                                @onclick="PreviousMonth">
                            <svg width="17"
                                 height="17"
                                 viewBox="0 0 8 8"
                                 aria-hidden="true"
                                 focusable="false"
                                 role="img">
                                <path fill="currentColor"
                                      d="M5.25 0l-4 4 4 4 1.5-1.5L4.25 4l2.5-2.5L5.25 0z" />
                            </svg>
                        </button>
                        <button type="button"
                                class="date-picker-today-button"
                                title="Today"
                                @onclick="ShowToday">
                            <svg width="18"
                                 height="18"
                                 viewBox="0 0 448 512"
                                 aria-hidden="true"
                                 focusable="false"
                                 role="img">
                                <path fill="currentColor"
                                      d="M400 64h-48V8c0-4.4-3.6-8-8-8h-16c-4.4 0-8 3.6-8 8v56H128V8c0-4.4-3.6-8-8-8h-16c-4.4 0-8 3.6-8 8v56H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zm16 400c0 8.8-7.2 16-16 16H48c-8.8 0-16-7.2-16-16V192h384v272zm0-304H32v-48c0-8.8 7.2-16 16-16h352c8.8 0 16 7.2 16 16v48zM112 384h96c8.8 0 16-7.2 16-16v-96c0-8.8-7.2-16-16-16h-96c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16zm16-96h64v64h-64v-64z" />
                            </svg>
                        </button>
                        <select class="date-picker-select-month"
                                title="Select Month"
                                @bind="Month">
                            @for (var index = 0; index < DateTimeFormatInfo.MonthNames.Length - 1; index++)
                            {
                                var month = DateTimeFormatInfo.MonthNames[index];
                                var number = index + 1;
                                <option @key="index" value="@number">@month</option>
                            }
                        </select>
                        <input type="number"
                               class="date-picker-input-year"
                               title="Year"
                               placeholder="Year"
                               @bind="Year" />
                        <button type="button"
                                class="date-picker-next-button"
                                title="Next Month"
                                @onclick="NextMonth">
                            <svg width="17"
                                 height="17"
                                 viewBox="0 0 8 8"
                                 aria-hidden="true"
                                 focusable="false">
                                <path fill="currentColor"
                                      d="M2.75 0l-1.5 1.5L3.75 4l-2.5 2.5L2.75 8l4-4-4-4z" />
                            </svg>
                        </button>
                    </div>
                    <section class="date-picker-table">
                        <header class="date-picker-header">
                            @foreach (var header in Headers)
                            {
                                <div @key="@header" class="date-picker-header-cell">@header</div>
                            }
                        </header>
                        <div class="date-picker-body">
                            @foreach (var row in Rows)
                            {
                                <div @key="@row.Key" class="date-picker-row">
                                    @foreach (var cell in row.Cells)
                                    {
                                        <span @key="@cell.Date"
                                              role="button"
                                              tabindex="0"
                                              disabled="@cell.IsDisabled"
                                              class="@DateCellClass(cell)"
                                              @onclick="() => SelectDate(cell)"
                                              @onkeydown="e => DateCellKeyDown(e, cell)">@cell.Day</span>
                                    }
                                </div>
                            }
                        </div>
                    </section>
                </div>
            }
            @if (Mode == DateTimePickerMode.Time || Mode == DateTimePickerMode.DateTime)
            {
                <div class="time-picker-container">
                    @foreach (var segment in Segments)
                    {
                        <div @key="@segment.Date"
                             role="button"
                             tabindex="0"
                             disabled="@segment.IsDisabled"
                             class="@TimeSegmentClass(segment)"
                             @onclick="() => SelectTime(segment)"
                             @onkeydown="e => TimeCellKeyDown(e, segment)">
                            @segment.Text
                        </div>
                    }
                </div>
            }
        </div>
    }
</div>
